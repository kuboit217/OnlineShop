@model Model.EF.Slide

@{
    ViewBag.Title = "AddSlide";
    Layout = "~/Areas/Admin/Views/Shared/_layout.cshtml";
}

@section breadcrumb
{
    Thêm slideshow
}

@section jsFooter
{
    <script>
        $('#btnSelectImage').on('click', function (e) {
            e.preventDefault();
            var finder = new CKFinder();
            finder.selectActionFunction = function (url) {
                $('#txtImage').val(url);
            };
            finder.popup();
        })
        var editor = CKEDITOR.replace('txtDescription', {
            customConfig: '/assets/admin/js/plugin/ckeditor/config.js',
        });
         
    </script>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Thêm Slideshow</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="container">
            <div class="row">
                <div class="col-6">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @id = "txtImage" }, id = "txtImage" })
                            <a id="btnSelectImage" href="#"><input type="submit" value="Chọn Ảnh" /></a>
                            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.DisplayOrrder, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.DisplayOrrder, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DisplayOrrder, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-6">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group row">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div class="checkbox">
                                @Html.EditorFor(model => model.Status)
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } , @id = "txtDescription" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Thêm mới" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
